package com.member.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.board.domain.BoardVO;
import com.member.domain.MemberVO;
import com.member.mapper.MemberMapper;

// RestController는 @Controller와 @ResponseBody가 합쳐진 어노테이션이다. 
// view가 필요없는 API만 지원하는 서비스에서 사용되는데 현재는 view가 필요하기 때문에 @Controller를 사용해준다.
@Controller
@RequestMapping("/member")
public class MemberController {

	@Autowired
	private MemberMapper memberMapper;

	// 회원 목록
	@RequestMapping(method = RequestMethod.GET)
	public ModelAndView member() throws Exception {
		List<MemberVO> list = memberMapper.memberList();

		return new ModelAndView("memberList", "list", list);
	}

	// 회원 생성 페이지로 이동하기
	@RequestMapping(value = "/mem", method = RequestMethod.GET)
	public ModelAndView createForm() throws Exception {
		return new ModelAndView("memberCreate");
	}

	// 회원 생성하기( POST )
	@RequestMapping(value = "/mem", method = RequestMethod.POST)
	public String create(@ModelAttribute("MemberVO") MemberVO member) throws Exception {
		memberMapper.memberInsert(member);
		return "redirect://localhost:8080/member";
	}

	// 회원 상세
	@RequestMapping(value = "/{num}", method = RequestMethod.GET)
	public ModelAndView view(@PathVariable("num") int num) throws Exception {

		MemberVO member = memberMapper.memberView(num);

		return new ModelAndView("memberView", "member", member);
	}

	// 회원 수정 페이지
	@RequestMapping(value = "/mem/{num}", method = RequestMethod.GET)
	public ModelAndView updateForm(@PathVariable("num") int num) throws Exception {
		MemberVO member = memberMapper.memberView(num);

		return new ModelAndView("memberUpdate", "member", member);
	}

	// 게시글 수정(PATCH)
	@RequestMapping(value = "/mem/{num}", method = RequestMethod.PATCH)
	public String update(@ModelAttribute("MemberVO") MemberVO member, @PathVariable("num") int num) throws Exception {

		memberMapper.memberUpdate(member);

		return "redirect://localhost:8080/member/" + num;
	}

	// 게시글 삭제(DELETE)
	@RequestMapping(value = "/create/{bno}", method = RequestMethod.DELETE)
	public String delete(@PathVariable("bno") int bno) throws Exception {

		boardMapper.boardDelete(bno);

		return "redirect://localhost:8080/board";
	}
}
